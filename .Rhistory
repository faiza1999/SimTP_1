rdist_rep(x,p,z)
x<-(5,10,30)
x<-c(5,10,30)
rdist_rep(x,p,z)
p<-c(1/4,1/4,1/4,1/4)
x<-c(5,10,30,60)
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
n=length(p)
r=runif(1)
b=p[1];
k=1
for (j in 1:z) { cat("j = ",j, "\n")
if((r>=0) & (r<=b))
{
y=x[1]
cat("Test N°",k,"=", y,"\n")
break
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("Test N°",k,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("Test N°",k,"=", y,"\n")
}
k=k+1
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
n=length(p)
r=runif(1)
b=p[1];
k=1
for (j in 1:z) { cat("j = ",j, "\n")
if((r>=0) & (r<=b))
{
y=x[1]
cat("Test N°",k,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("Test N°",k,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("Test N°",k,"=", y,"\n")
}
k=k+1
cat(k,"\n")
}## Fin de la boucle For
}## Fin de la fonction
z<-2
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
n=length(p)
r=runif(1)
b=p[1];
k=1
for (j in 1:z) { cat("j = ",j, "\n")
if((r>=0) & (r<=b))
{
y=x[1]
cat("Test N°",k,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("Test N°",k,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("Test N°",k,"=", y,"\n")
}
k=k+1
cat("k = ", k,"\n")
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
n=length(p)
r=runif(1)
b=p[1];
k=1
for (j in 1:z) { cat("j = ",j, "\n")
if((r>=0) & (r<=b))
{
y=x[1]
cat("Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("Test N°",j,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("Test N°",j,"=", y,"\n")
}
k=k+1
cat("k = ", k,"\n")
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
n=length(p)
r=runif(1)
b=p[1];
k=1
for (j in 1:z) { cat("j = ",j, "\n")
if((r>=0) & (r<=b))
{
y=x[1]
cat("1_Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("2_Test N°",j,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("3_Test N°",j,"=", y,"\n")
}
k=k+1
cat("k = ", k,"\n")
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
z<-3
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
n=length(p)
r=runif(1)
b=p[1];
k=1
for (j in 1:z) { cat("j = ",j, "\n")
if((r>=0) & (r<=b))
{
y=x[1]
cat("1_Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("2_Test N°",j,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("3_Test N°",j,"=", y,"\n")
}
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
k=1
for (j in 1:z) { cat("j = ",j, "\n")
n=length(p)
r=runif(1)
b=p[1];
if((r>=0) & (r<=b))
{
y=x[1]
cat("1_Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("2_Test N°",j,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("3_Test N°",j,"=", y,"\n")
}
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
for (j in 1:z) { cat("j = ",j, "\n")
n=length(p)
r=runif(1)
b=p[1];
if((r>=0) & (r<=b))
{
y=x[1]
cat("1_Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("2_Test N°",j,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("3_Test N°",j,"=", y,"\n")
}
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
for (j in 1:z) {
n=length(p)
r=runif(1)
b=p[1];
if((r>=0) & (r<=b))
{
y=x[1]
cat("1_Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("2_Test N°",j,"=", y,"\n")
break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("3_Test N°",j,"=", y,"\n")
}
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
for (j in 1:z) {
n=length(p)
r=runif(1)
b=p[1];
if((r>=0) & (r<=b))
{
y=x[1]
cat("1_Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("2_Test N°",j,"=", y,"\n")
break;break
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
cat("3_Test N°",j,"=", y,"\n")
}
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
#' Simulation d'une loi discrete pour N fois
#' @export
#' @param x vecteur numerique  variable aleatoire
#' @param p vecteur numerique  variable de propabilite
#' @param z nombre de repetition
rdist_rep<-function(x,p,z)
{
for (j in 1:z) {
n=length(p)
r=runif(1)
b=p[1];
if((r>=0) & (r<=b))
{
y=x[1]
cat("1_Test N°",j,"=", y,"\n")
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n-1)
{
if((r>=a) & (r <=b))
{
y=x[i]
cat("2_Test N°",j,"=", y,"\n")
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
break()
}
y=x[n]
cat("3_Test N°",j,"=", y,"\n")
}
}## Fin de la boucle For
}## Fin de la fonction
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
rdist_rep(x,p,z)
